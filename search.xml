<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>JS定时器setTimeout和setInterval的使用</title>
    <url>/2020/03/08/JS%E5%AE%9A%E6%97%B6%E5%99%A8setTimeout%E5%92%8CsetInterval%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="setTimeout和setInterval的使用及区别"><a href="#setTimeout和setInterval的使用及区别" class="headerlink" title="setTimeout和setInterval的使用及区别"></a>setTimeout和setInterval的使用及区别</h2><h3 id="setTimeout"><a href="#setTimeout" class="headerlink" title="setTimeout"></a>setTimeout</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">setTimeout(function()&#123;</span><br><span class="line">    执行功能</span><br><span class="line">&#125;,时间间隔);</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="setInterval"><a href="#setInterval" class="headerlink" title="setInterval"></a>setInterval</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">setInterval(function()&#123;</span><br><span class="line">    执行功能</span><br><span class="line">&#125;,时间间隔);</span><br></pre></td></tr></table></figure>

<h3 id="两者联系与区别"><a href="#两者联系与区别" class="headerlink" title="两者联系与区别"></a>两者联系与区别</h3><blockquote>
<p>setTimeout在时间间隔之后执行一次功能函数，其运用在延迟一段时间，再进行某项操作。<br>setInterval为每个时间间隔后，都将执行功能函数，常用于刷新表达式。<br>setInterval会自动重复，而setTimeout不会重复</p>
</blockquote>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>-JS -setTimeout -setInterval</tag>
      </tags>
  </entry>
  <entry>
    <title>Cookie和Session的区别</title>
    <url>/2020/03/03/Cookie%E5%92%8CSession%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<h2 id="Cookie和Session的区别"><a href="#Cookie和Session的区别" class="headerlink" title="Cookie和Session的区别"></a>Cookie和Session的区别</h2><ul>
<li><p>Cookie数据存放在浏览器（本地）上，Session数据放在服务器上</p>
<a id="more"></a></li>
<li><p>Cookie并不安全，别人可以分析存放在本地的Cookie并进行Cookie欺骗，考虑安全使用Session</p>
</li>
<li><p>Session会在一定时间内保存在服务器上，当访问增多，会比较占用你服务器的性能，考虑到减轻服务器性能方面，应当使用Cookie</p>
</li>
<li><p>单个Cookie保存的数据不能超过4K，很多浏览器都限制一个站点最多保存20个Cookie</p>
</li>
<li><p>建议将登录信息等重要信息存放为Session，其他信息如果需要保留，可以放在Cookie中</p>
</li>
<li><p>Session保存在服务器，客户端不知道其中的信心；Cookie保存在客户端，服务器能够知道其中的信息</p>
</li>
<li><p>Session中保存的是对象，Cookie中保存的是字符串</p>
</li>
<li><p>Session不能区分路径，同一个用户在访问一个网站期间，所有的Session在任何一个地方都可以访问到，而Cookie中如果设置了路径参数，那么同一个网站中不同路径下的Cookie互相是访问不到的</p>
</li>
</ul>
<blockquote>
<p>参考：<a href="https://segmentfault.com/a/1190000012058858" target="_blank" rel="noopener">https://segmentfault.com/a/1190000012058858</a><br>侵权自删</p>
</blockquote>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Cookie-Session</tag>
      </tags>
  </entry>
  <entry>
    <title>Mysql增删改查基本语法</title>
    <url>/2020/02/29/Mysql%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h1 id="Mysql增删改查基本语法"><a href="#Mysql增删改查基本语法" class="headerlink" title="Mysql增删改查基本语法"></a>Mysql增删改查基本语法</h1><a id="more"></a>
<h2 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CREATE TABLE 表名称</span><br><span class="line">(</span><br><span class="line">列名称1 数据类型,</span><br><span class="line">列名称2 数据类型,</span><br><span class="line">列名称3 数据类型,</span><br><span class="line">....</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<h2 id="增加数据"><a href="#增加数据" class="headerlink" title="增加数据"></a>增加数据</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INSERT INTO 表名称 VALUES (值1, 值2,....)</span><br></pre></td></tr></table></figure>

<h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DELETE FROM 表名称 </span><br><span class="line">WHERE 列名称 &#x3D; 值</span><br></pre></td></tr></table></figure>

<h2 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">UPDATE 表名称 </span><br><span class="line">SET 列名称 &#x3D; 新值 </span><br><span class="line">WHERE 列名称 &#x3D; 某值</span><br></pre></td></tr></table></figure>

<h2 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SELECT 列名称 FROM 表名称</span><br><span class="line">(WHERE 列名称 &#x3D; 值)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Mysql语法</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot基础学习</title>
    <url>/2020/02/27/Spring-Boot%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="一、Spring-Boot入门"><a href="#一、Spring-Boot入门" class="headerlink" title="一、Spring Boot入门"></a>一、Spring Boot入门</h1><h2 id="1、Spring-Boot简介"><a href="#1、Spring-Boot简介" class="headerlink" title="1、Spring Boot简介"></a>1、Spring Boot简介</h2><blockquote>
<p>简化Spring应用开发的一个框架；<br>整个Spring技术栈的一个大整合；<br>J2EE开发的一站式解决方案；</p>
</blockquote>
<a id="more"></a>

<h2 id="2、微服务"><a href="#2、微服务" class="headerlink" title="2、微服务"></a>2、微服务</h2><p>2014，martin fowler<br>微服务：架构风格<br>一个应用应该是一组小型服务；可以通过HTTP的方式进行互通；</p>
<p>每一个功能元素最终都是一个可独立替换和独立升级的软件单元；</p>
<p><a href="https://martinfowler.com/articles/microservices.html#MicroservicesAndSoa" target="_blank" rel="noopener">详细参照微服务文档</a></p>
<blockquote>
<p><em>持续更新</em></p>
</blockquote>
]]></content>
      <categories>
        <category>Spring Boot基础</category>
      </categories>
      <tags>
        <tag>Spring Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown基本使用</title>
    <url>/2020/02/19/Markdown%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="Markdown的基本使用"><a href="#Markdown的基本使用" class="headerlink" title="Markdown的基本使用"></a>Markdown的基本使用</h1><p><em>Tip：使用的各类符号后面需要加一个空格再跟内容</em></p>
<a id="more"></a>
<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br><span class="line">注意：#和标题名称之间需要加一个空格</span><br></pre></td></tr></table></figure>
<h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><ul>
<li>斜体<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">**文本**</span><br></pre></td></tr></table></figure></li>
<li>加粗<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*文本*</span><br></pre></td></tr></table></figure></li>
<li>斜体加粗<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">***文本***</span><br></pre></td></tr></table></figure></li>
<li>删除线<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~文本~</span><br></pre></td></tr></table></figure>


</li>
</ul>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul>
<li>无序列表<br>无序列表-+*都可以使用<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- 文本1</span><br><span class="line">+ 文本2</span><br><span class="line">* 文本3</span><br></pre></td></tr></table></figure></li>
<li>有序列表<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 文本1</span><br><span class="line">2. 文本2</span><br><span class="line">3. 文本3</span><br></pre></td></tr></table></figure>


</li>
</ul>
<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>不分行使用 格式：（`内容`）<br>多行内容使用 三个反斜点内添加内容，格式：(```内容```)<br>多行示例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;&lt;title&gt;这是代码块示例&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;</span><br><span class="line">    &lt;body&gt;&lt;&#x2F;body&gt;       </span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure>

<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>书写格式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">列1 | 列2 | 列3 </span><br><span class="line">--- | --- | --- </span><br><span class="line">数据 | 数据 | 数据 </span><br><span class="line">数据 | 数据 | 数据 </span><br><span class="line">数据 | 数据 | 数据 </span><br><span class="line">注意：整体内容上面要空一行，如果不空，则会默认为普通文本</span><br></pre></td></tr></table></figure>
<p>示例：</p>
<table>
<thead>
<tr>
<th>列1</th>
<th>列2</th>
<th>列3</th>
</tr>
</thead>
<tbody><tr>
<td>数据</td>
<td>数据</td>
<td>数据</td>
</tr>
<tr>
<td>数据</td>
<td>数据</td>
<td>数据</td>
</tr>
<tr>
<td>数据</td>
<td>数据</td>
<td>数据</td>
</tr>
</tbody></table>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>格式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;这是引用内容</span><br></pre></td></tr></table></figure>
<p>示例：</p>
<blockquote>
<p>这是引用内容</p>
</blockquote>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>格式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![这是示例图片](图片链接 &quot;title&quot;)title写可不写</span><br></pre></td></tr></table></figure>
<p>示例：<br><img src="https://940843897.github.io/images/head.jpg" alt="这是示例图片" title="示例图片"></p>
<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>格式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[链接名](链接地址 &quot;title&quot;) title写可不写</span><br></pre></td></tr></table></figure>
<p><a href="https://www.baidu.com" target="_blank" rel="noopener" title="这是百度">百度</a></p>
<blockquote>
<p><em>持续更新</em><br><em>转载请注明出处</em><br><em>欢迎评论交流</em></p>
</blockquote>
]]></content>
      <categories>
        <category>Markdown使用</category>
      </categories>
      <tags>
        <tag>-Markdown</tag>
      </tags>
  </entry>
</search>
